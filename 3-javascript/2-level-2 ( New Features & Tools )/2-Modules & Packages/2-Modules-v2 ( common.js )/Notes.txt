


----------------------------------------------------------------------
problems with .js-dev without module standards & Loaders
----------------------------------------------------------------------

==> global Naming collisions

        soln : self-executable function / IIFE

==> loading dependency modules in order is manual & its difficult    

----------------------------------------------------------------------

----------------------------------------------------------------------
Solutions : 
----------------------------------------------------------------------

using module standards & loaders from third-party-javascript-community


        => AMD ( Async Module Definition )
        => common.js module standard (  simple & pupular  )



------------------------------------------------------------------------------
common.js module standard/spec
------------------------------------------------------------------------------



 ==> every .js file is module
 ==> all variables/functions in a .js file are private by default
 ==> to abstract/export any member(s) ( var / function ) to other module,
     use 'module.exports' object 
 ==> to require/import any module , use 'require()' function
 ==> group related modules as package with description file ( package.json )

 imp-note : Node.js runtime already implemented this standard as default module standard, 
            but not not browser



 -----------------------------------------------------------------------------
  Tool => javascript package manager   ( NPM | YARN )
 -----------------------------------------------------------------------------
 

     NPM ( Node Package Manager )

       ==> cli(command line tool )  tool
       ==> part of Node.js runtime


    why we need this tool ?   

        ==> to publish/install javascript packages to/from  'repository' (https://registry.npmjs.org/)
 
 
-----------------------------------------------------------------------------------    
NPM commands              
-----------------------------------------------------------------------------------    


> npm init   => to create  package.json
> npm login
> npm version pacth|minor|major
> npm i/install <package-name1> <package-name2>

https://docs.npmjs.com/cli-documentation/



        
 


------------------------------------------------------------------------------
ECMA , in ES6,  ES-modules
------------------------------------------------------------------------------



 ==> every .js file is module
 ==> all variables/functions in a .js file are private by default
 ==> to abstract/export any member(s) ( var / function ) to other module,
     use 'export' keyword 
 ==> to require/import any module , use 'import' keyword
 ==> group related modules as package with description file ( package.json )

 imp-note : neither Node.js nor browser  implemented this standard as default module standard, 
            
--------------------------------------------------------------------------------            


